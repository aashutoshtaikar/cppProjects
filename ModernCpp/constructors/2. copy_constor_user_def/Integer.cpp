#include "Integer.h"

Integer::Integer()
{
    m_pInt = new int(0);
}

Integer::Integer(int value)
{
    m_pInt = new int(value);
}

//default copy constructor generated by compiler
//this = obj
//m_pInt = obj.m_pInt;

//copy constructor
Integer::Integer(const Integer& obj){
    m_pInt = new int(*obj.m_pInt); //allocate memory and get the value from the pointer -- deep copy
}

int Integer::getValue()
{
    return *m_pInt;
}

void Integer::setValue(int value)
{
    *m_pInt = value;
}


Integer::~Integer()
{
    delete [] m_pInt;
}